archivesBaseName = "NorthernCompass-NeoForge"

architectury {
    platformSetupLoomIde()
    neoForge()
}

loom {
    refreshDeps(false)
}

configurations {
    developmentNeoForge.extendsFrom(common)
}

repositories {
    maven {
        name = "neoforged"
        url = "https://maven.neoforged.net/releases"
    }
}

dependencies {
    common(project(path: ":northerncompass-common", configuration: "namedElements")) {
        transitive false
    }
    compileJar(project(path: ":northerncompass-common", configuration: "transformProductionNeoForge")) {
        transitive = false
    }
    neoForge("net.neoforged:neoforge:${neoForgeVersion}")
}

artifacts {
    signJar remapJar
}

build {
    finalizedBy("signJar")
}

jar {
    enabled = false
    dependsOn("shadowJar")
    manifest {
        attributes(
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Implementation-Title": "NorthernCompass",
                "Implementation-Vendor": "LX_Gaming",
                "Implementation-Version": "${project.version}",
                "Specification-Title": "northerncompass",
                "Specification-Vendor": "LX_Gaming",
                "Specification-Version": "1"
        )
    }
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    from (sourceSets.main.resources.srcDirs) {
        include("META-INF/mods.toml")
        expand("version": version)
    }
}

remapJar {
    archiveClassifier.set(null)
    inputFile = shadowJar.getArchiveFile()
    dependsOn("shadowJar")
}

shadowJar {
    archiveClassifier.set("dev")
    configurations = [project.configurations.compileJar]
    destinationDirectory = jar.getDestinationDirectory()
}