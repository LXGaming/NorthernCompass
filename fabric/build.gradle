plugins {
    id "com.github.johnrengelman.shadow"
}

archivesBaseName = "NorthernCompass-Fabric"

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    refreshDeps(false)
}

configurations {
    developmentFabric.extendsFrom(common)
}

repositories {
    maven {
        name = "fabricmc"
        url = "https://maven.fabricmc.net/"
    }
}

dependencies {
    common(project(path: ":northerncompass-common", configuration: "namedElements")) {
        transitive false
    }
    compileJar(project(path: ":northerncompass-common", configuration: "transformProductionFabric")) {
        transitive false
    }
    modImplementation("net.fabricmc:fabric-loader:${fabricLoaderVersion}")

    [
        "fabric-api-base"
    ].forEach {
        include(modImplementation(fabricApi.module(it, fabricApiVersion)))
    }
}

artifacts {
    signJar remapJar
}

build {
    finalizedBy("signJar")
}

jar {
    enabled = false
    dependsOn("shadowJar")
    manifest {
        attributes(
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Implementation-Title": "NorthernCompass",
            "Implementation-Vendor": "LX_Gaming",
            "Implementation-Version": "${project.version}",
            "Specification-Title": "northerncompass",
            "Specification-Vendor": "LX_Gaming",
            "Specification-Version": "1"
        )
    }
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    from (sourceSets.main.resources.srcDirs) {
        include("fabric.mod.json")
        expand("version": version)
    }
}

remapJar {
    archiveClassifier.set(null)
    inputFile = shadowJar.getArchiveFile()
    dependsOn("shadowJar")
}

shadowJar {
    archiveClassifier.set("dev")
    configurations = [project.configurations.compileJar]
    destinationDirectory = jar.getDestinationDirectory()
}